spring.application.name=MicroServiceProduccion

server.port=8087

# ==========================
# BASE DE DATOS POSTGRESQL (Docker o local)
# ==========================
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ==========================
# JPA / HIBERNATE
# ==========================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ==========================
# JWT CONFIGURACIÃ“N
# ==========================
jwt.secret=p3u9FhZ@4!aB6nT$kX7rVq2^jP0zYwL&dH8sJm#QfR1tN*Zc5oGxE%lK9vU0bI


# ==========================
# LOGGING / DEBUG
# ==========================
logging.level.org.springframework.data.jpa=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.root=INFO

# Logs de Hibernate
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Logs de errores
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.springframework=error

# ==========================
# MENSAJES DE VALIDACIÃ“N
# ==========================
spring.messages.basename=messages
# application.properties
logging.level.com.ApiarioSamano.MicroServiceAlmacen=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n


# ==========================================
# CONFIGURACIÃ“N CORS
# ==========================================
cors.allowed-origins=http://localhost:4200

# ==========================================
# Rutas microservices
# ==========================================
microservice.almacen.url=${MICROSERVICIO_ALMACEN}
microservice.generadorcodigo.url=${MICROSERVICIO_CODIGOS_URL}

# ==========================
# ðŸ”‘ CONFIGURACIÃ“N IA - HUGGING FACE
# ==========================
huggingface.api.token=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
app.ia.huggingface.url=https://api-inference.huggingface.co/models

# ==========================
# CONFIGURACIÃ“N REST TEMPLATE
# ==========================
spring.web.resttemplate.read-timeout=30000
spring.web.resttemplate.connect-timeout=5000

# ==========================
# MENSAJES DE VALIDACIÃ“N
# ==========================
spring.messages.basename=messages

# ==========================
# CONFIGURACIÃ“N OLLAMA OPTIMIZADA
# ==========================
# Para Docker: usa las variables de entorno OLLAMA_URL y OLLAMA_MODEL
# Para desarrollo local: valores por defecto
ollama.url=${OLLAMA_URL:http://localhost:11434}
ollama.model=${OLLAMA_MODEL}  
ollama.timeout.default=30
ollama.timeout.quick=15
ollama.timeout.max=45

# Timeouts para WebClient
spring.webflux.client.response-timeout=30s


# Nivel global de logs
logging.level.root=INFO

# Nivel de logs para tu paquete base (por ejemplo com.ApiarioSamano)
logging.level.com.ApiarioSamano=DEBUG

# Mostrar logs en consola
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %level - %logger{36} - %msg%n