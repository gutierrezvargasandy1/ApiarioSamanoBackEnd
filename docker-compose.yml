version: "3.9"

services:
  # üêò Base de datos PostgreSQL
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: microservice_postgres
    environment:
      POSTGRES_DB: UsuariosDB
      POSTGRES_USER: apiario
      POSTGRES_PASSWORD: apiario123
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apiario -d UsuariosDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - apiario-network

  # ‚òï MicroServiceAuth
  microserviceauth:
    image: microserviceauth:1.0
    container_name: MicroServiceAuth
    depends_on:
      - postgres
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/UsuariosDB
      SPRING_DATASOURCE_USERNAME: apiario
      SPRING_DATASOURCE_PASSWORD: apiario123
      MICROSERVICIO_CODIGOS_URL: http://microservicegeneradorcodigos:8084/api/codigos/otp
      MICROSERVICIO_EMAIL_URL: http://microservicenotificaciones:8083/api/email/enviarOtp
    networks:
      - apiario-network

  # üë§ MicroServiceUsuarios
  microserviceusuarios:
    image: microserviceusuario:1.0
    container_name: MicroServiceUsuarios
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/UsuariosDB
      SPRING_DATASOURCE_USERNAME: apiario
      SPRING_DATASOURCE_PASSWORD: apiario123
      MICROSERVICIO_CODIGOS_URL: http://microservicegeneradorcodigos:8084/api/codigos/contrasena
      MICROSERVICIO_EMAIL_URL: http://microservicenotificaciones:8083/api/email/enviarContrasena
    networks:
      - apiario-network

  # ‚úâÔ∏è MicroServiceNotificacionesGmail
  microservicenotificaciones:
    image: microservicenotificacionesgmail:1.0
    container_name: MicroServiceNotificaciones
    ports:
      - "8083:8083"
    networks:
      - apiario-network

  # üî¢ MicroServiceGeneradorCodigos
  microservicegeneradorcodigos:
    image: microservicegeneradorcodigo:1.0
    container_name: MicroServiceGeneradorCodigos
    ports:
      - "8084:8084"
    networks:
      - apiario-network

# üè≠ MicroServiceProveedores
  microserviceproveedores:
    image: microserviceproveedores:1.0
    container_name: MicroServiceProveedores
    depends_on:
      - postgres
    build:
      context: ./MicroServiceProveedores
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    environment:
     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ProveedoresDB
     SPRING_DATASOURCE_USERNAME: apiario
     SPRING_DATASOURCE_PASSWORD: apiario123
    networks:
      - apiario-network

volumes:
  pgdata:

networks:
  apiario-network: